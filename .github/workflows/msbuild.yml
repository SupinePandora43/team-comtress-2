name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  #SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  #BUILD_CONFIGURATION: Release
  VALVE_NO_AUTO_P4: 1
  PreferredToolArchitecture: x64

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64_x86
        toolset: 14.0
    - name: Set Registry Value
      run: reg add "HKLM\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\10.0\Projects\{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}" /t REG_SZ /v DefaultProjectExtension /d vcproj /f
    - name: idk
      run: |
         .\download_libs.bat
         msbuild /m /p:Configuration=Debug   thirdparty\protobuf-2.5.0\vsprojects\libprotobuf.vcxproj
         msbuild /m /p:Configuration=Release thirdparty\protobuf-2.5.0\vsprojects\libprotobuf.vcxproj
         .\creategameprojects_dev.bat
    - run: type .\games.sln
    - name: Build games.sln
      run: msbuild "/p:Configuration=Release;Platform=x86 .\games.sln /t:Build" # /std:c++17 # /t:Client__TF_
    #- name: Build
    #  working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
    #  run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
